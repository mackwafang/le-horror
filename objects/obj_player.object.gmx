<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_right</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_kinetic</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canMove = true;
moveSpeed = 1;
image_speed = 0;
xPrev = x div global.gridSize;
yPrev = y div global.gridSize;
spotRange = 64;
spotFov = 30;
facing = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
if (pauseState) {
    canMove = false;
    image_speed = 0;
    speed = 0;
}
else {
    canMove = true;
}
if (canMove) {
    if (place_snapped(global.gridSize,global.gridSize)) {
        if ((x div global.gridSize != xPrev) || (y div global.gridSize != yPrev)) {
            mp_grid_clear_cell(global.grid,xPrev,yPrev);
            xPrev = x div global.gridSize;
            yPrev = y div global.gridSize;
        }
        speed = 0;
        if (keyboard_check(vk_left)) {
            if (place_free(x-global.gridSize,y)) {
                speed = moveSpeed;
                direction = 180;
            }
            facing = 180;
            sprite_index = spr_player_left;
        }
        if (keyboard_check(vk_right)) {
            if (place_free(x+global.gridSize,y)) {
                speed = moveSpeed;
                direction = 0;
            }
            facing = 0;
            sprite_index = spr_player_right;
        }
        if (keyboard_check(vk_up)) {
            if (place_free(x,y-global.gridSize)) {
                speed = moveSpeed;
                direction = 90;
            }
            facing = 90;
            sprite_index = spr_player_up;
        }
        if (keyboard_check(vk_down)) {
            if (place_free(x,y+global.gridSize-1)) {
                speed = moveSpeed;
                direction = 270;
            }
            facing = 270;
            sprite_index = spr_player_down;
        }
        if (speed &gt; 0) {
            var xCur = x div global.gridSize;
            var yCur = y div global.gridSize;
            var xTo = cos(degtorad(direction));
            var yTo = sin(degtorad(direction));
            image_speed = 0.1;
            if(mp_grid_get_cell(global.grid,xCur+xTo,yCur-yTo) != -1) {
                mp_grid_add_cell(global.grid,xCur+xTo,yCur-yTo);
            }
        }
        else {
            image_speed = 0;
            image_index = 1;
        }
    }
    else {
        speed = moveSpeed;
        place_snapped(global.gridSize,global.gridSize);
    }
}
else {
    if (!place_snapped(global.gridSize,global.gridSize)) {
        place_snapped(global.gridSize,global.gridSize);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,x,y);
/*draw_circle_colour(x,y,2,red,red,false);
draw_circle_colour(x-global.gridSize,y+8,2,yellow,yellow,false);
draw_circle_colour(x+global.gridSize,y+8,2,yellow,yellow,false);
draw_circle_colour(x,y-global.gridSize,2,yellow,yellow,false);
draw_circle_colour(x,y+global.gridSize-1,2,yellow,yellow,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
